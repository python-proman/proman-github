[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "proman-github"
version = "0.1.1-dev2"
description = "GitHub based package manager."
authors = ["Jesse P. Johnson <jpj6652@gmail.com>"]
license = "LGPL-3.0"
readme = "README.md"
keywords = ["configuration management"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
packages = [
    {include = "proman_github", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.6.2"
PyGithub = "^1.55"
python-magic = "^0.4.24"
argufy = "^0.1.2-alpha.1"
proman-common = {version = "^0.1.1-alpha.1", allow-prereleases = true}

[tool.poetry.dev-dependencies]
pytest = "^5.2"
flake8 = "^3.8.3"
pydocstyle = "^5.0.2"
docstr-coverage = "^1.2.0"
pytest-cov = "^2.10.0"
isort = "^5.9.2"
bandit = "^1.6.2"
safety = "^1.9.0"
mkdocs = "^1.2.3"
mkdocs-material = "^7.2.0"
mkdocstrings = "^0.15.2"
invoke = "^1.4.1"
flit = "^3.1.0"
mypy = "^0.910"
pyfakefs = "^4.5.0"
black = "^21.7b0"

[tool.poetry.scripts]
github = "proman_github:__main__.main"
gh = "proman_github:__main__.main"

[tool.proman.versioning]
enable_devreleases = false

[[tool.proman.versioning.files]]
filepath = "src/proman_github/__init__.py"
pattern = "__version__ = '${version}'"

[[tool.proman.versioning.files]]
filepath = "tests/test_version.py"
pattern = "__version__ == '${version}'"

[[tool.proman.versioning.files]]
filepath = "pyproject.toml"
pattern = "version = \"${version}\""

[tool.pydocstyle]
ignore = [
    "D203",
    "D213",
    "D300"
]

[tool.isort]
profile = "black"
line_length = 79

[tool.black]
line-lenght = 79
include = '\.pyi?$'
exclude = '''

(
  /(
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vagrant
    | _build
    | dist
  )
)
'''

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:invoke.*:",
    "ignore::DeprecationWarning:_yaml.*:",
]

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
ignore_missing_imports = true
